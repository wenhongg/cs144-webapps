import java.io.IOException;
import java.sql.* ;
import java.util.List;
import java.util.ArrayList;
import java.util.Date;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.servlet.Servlet;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.sql.DataSource;

import org.commonmark.node.*;
import org.commonmark.parser.Parser;
import org.commonmark.renderer.html.HtmlRenderer;

//added 
import java.util.Arrays;
import wenhong.project2.PostEntry;

/**
 * Servlet implementation class for Servlet: ConfigurationTest
 *
 */
public class Editor extends HttpServlet {
    /**
     * The Servlet constructor
     * 
     * @see javax.servlet.http.HttpServlet#HttpServlet()
     */
    public Editor() {}

    public void init() throws ServletException
    {
        /*  write any servlet initialization code here or remove this function */
    }
    
    public void destroy()
    {
        /*  write any servlet cleanup code here or remove this function */
    }

    /**
     * Handles HTTP GET requests
     * 
     * @see javax.servlet.http.HttpServlet#doGet(HttpServletRequest request,
     *      HttpServletResponse response)
     */
    Connection c = null;


    public void doGet(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException 
    {
	// implement your GET method handling code here
	// currently we simply show the page generated by "edit.jsp"
        
        //allowed parameters
        final List<String> getAllowed = Arrays.asList(new String[]{"open","preview","list"});
        String action = request.getParameter("action");
        System.out.println(action);
        //check that action is valid
        if(action==null || !getAllowed.contains(action)) {
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }

        handleAction(action, request, response);
        //request.getRequestDispatcher("/edit.jsp").forward(request, response);
    }

    
    /**
     * Handles HTTP POST requests
     * 
     * @see javax.servlet.http.HttpServlet#doPost(HttpServletRequest request,
     *      HttpServletResponse response)
     */
    public void doPost(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException 
    {
	// implement your POST method handling code here
	// currently we simply show the page generated by "edit.jsp"


        final List<String> postAllowed = Arrays.asList(new String[]{"open","save","delete","preview","list"});

        String action = request.getParameter("action");
        System.out.println(action);
        //check that action is valid
        if(action==null || !postAllowed.contains(action)) {
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }

        handleAction(action, request, response);
        //request.getRequestDispatcher("/edit.jsp").forward(request, response);
    }


    /*
        Helper functions

    */
    private void handleAction(String action, HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException 
    {
        //basic checks
        String postid = request.getParameter("postid");

        if(postid!=null){
            try {
                Integer.parseInt(postid);
            } catch (NumberFormatException nfe) {
                response.sendError(HttpServletResponse.SC_NOT_FOUND); //maybe more like 400
                return;
            }
        }
        switch(action){
            case "open":
                handleOpen(request,response);
                break;
            case "save":
                handleSave(request,response);
                break;
            case "delete":
                handleDelete(request,response);
                break;
            case "preview":
                handlePreview(request,response);
                break;
            case "list":
                handleList(request,response);
                break;
        };
    }



    //String action = request.getParameter("action");
    //String username = request.getParameter("username");
    //String postID = request.getParameter("postid");
    //String title = request.getParameter("title");
    //String body = request.getParameter("body");

    private void handleOpen(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException 
    {
        String username = request.getParameter("username");
        String postID = request.getParameter("postid");
        String title = request.getParameter("title");
        String body = request.getParameter("body");

        if(username==null || postID==null){
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }
        
        int pID = Integer.parseInt(postID);


        if(pID<=0){
            //if parameters were passed, use them. else set to empty string
            if(title==null)
                title = "";
            if(body==null)
                body = "";
            
            //set attributes
            request.setAttribute("title", title);
            request.setAttribute("body", body);
        } else {
            // if title and body already passed, use them
            if(title!=null && body!=null){
                //set title and body if they were passed 
                request.setAttribute("title", title);
                request.setAttribute("body", body);
            } else {
                //search for existing value in db
                SQLHandler handler = new SQLHandler();
                String[] data = handler.findPost(username, pID);

                if(data==null){
                    response.sendError(HttpServletResponse.SC_NOT_FOUND);
                    return;
                }

                request.setAttribute("title", data[0]);
                request.setAttribute("body", data[1]);
            }
        }

        //get list data and return it
        response.setStatus(HttpServletResponse.SC_OK);
        request.getRequestDispatcher("/edit.jsp").forward(request, response);
    }

    private void handleSave(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException 
    {
        //save post into database, go to list page
        String username = request.getParameter("username");
        String postID = request.getParameter("postid");
        String title = request.getParameter("title");
        String body = request.getParameter("body");

        if(title==null || body==null || postID==null || username==null){
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }
        int pID = Integer.parseInt(postID);

        //save the entry
        SQLHandler handler = new SQLHandler();
        List<PostEntry> list = handler.savePost(username, pID, title, body);

        //if error arises, it failed to send
        if(list==null){
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }

        //if no error, push on
        request.setAttribute("list", list);
        response.setStatus(HttpServletResponse.SC_OK);
        request.getRequestDispatcher("/list.jsp").forward(request, response);
    }

    private void handleDelete(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException 
    {
        //delete the corresponding post, go to list page
        String username = request.getParameter("username");
        String postID = request.getParameter("postid");

        if(postID==null || username==null){ //enforced need for postID and username
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }
        int pID = Integer.parseInt(postID);

        SQLHandler handler = new SQLHandler();
        List<PostEntry> list = handler.deletePost(username, pID);

        //if error arises, it failed to delete.
        if(list==null){
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }

        request.setAttribute("list", list);
        response.setStatus(HttpServletResponse.SC_OK);
        request.getRequestDispatcher("/list.jsp").forward(request, response);
    }

    private void handlePreview(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException 
    {
        //render given title and body
        
        String username = request.getParameter("username");
        String postID = request.getParameter("postid");
        String title = request.getParameter("title");
        String body = request.getParameter("body");
        if(title==null || body==null || postID==null || username==null){ //enforced need for postID and username
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }

        //convert markdown to html
        Parser parser = Parser.builder().build();
        HtmlRenderer renderer = HtmlRenderer.builder().build();
        String html = renderer.render(parser.parse(body));  

        //set attributes
        request.setAttribute("title", title);
        request.setAttribute("parsed_body", html);

        response.setStatus(HttpServletResponse.SC_OK);
        request.getRequestDispatcher("/preview.jsp").forward(request, response);
    }

    private void handleList(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException 
    {
        //return list page
        String username = request.getParameter("username");
        if(username==null){
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }
        SQLHandler handler = new SQLHandler();
        List<PostEntry> list = handler.findList(username);

        request.setAttribute("list", list);

        response.setStatus(HttpServletResponse.SC_OK);
        request.getRequestDispatcher("/list.jsp").forward(request, response);
    }
}

